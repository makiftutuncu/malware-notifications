package dev.akif.malwarenotifications.persistence.detection;

import dev.akif.malwarenotifications.detection.Detection;
import dev.akif.malwarenotifications.detection.DetectionType;
import dev.akif.malwarenotifications.persistence.PostgreSQLEnum;
import dev.akif.malwarenotifications.persistence.device.DeviceEntity;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.time.Instant;
import java.util.UUID;

@AllArgsConstructor
@Data
@Entity
@NoArgsConstructor
@Table(name = "detections")
@TypeDef(name = "detection_type", typeClass = PostgreSQLEnum.class)
public class DetectionEntity {
    @Column(name = "id", unique = true, nullable = false)
    @Id
    @NonNull
    UUID id;

    @ManyToOne(optional = false)
    @JoinColumn(nullable = false)
    @NonNull
    DeviceEntity device;

    @Column(name = "time", nullable = false)
    @NonNull
    Instant time;

    @Column(name = "type", nullable = false)
    @Enumerated(EnumType.STRING)
    @NonNull
    @Type(type = "dev.akif.malwarenotifications.persistence.PostgreSQLEnum")
    DetectionType type;

    @Column(name = "app_name")
    String appName;

    @Column(name = "app_type")
    String appType;

    public DetectionEntity(@NonNull Detection detection) {
        this.id = detection.id();
        this.device = new DeviceEntity(detection.device());
        this.time = detection.time();
        this.type = detection.type();
        this.appName = detection.appName();
        this.appType = detection.appType();
    }

    public @NonNull Detection toDetection() {
        return new Detection(id, device.toDevice(), time, type, appName, appType);
    }
}
