package dev.akif.malwarenotifications.persistence.detection;

import lombok.NonNull;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;

import java.util.List;
import java.util.UUID;

public interface DetectionCrudRepository extends DetectionRepository, CrudRepository<DetectionEntity, UUID> {
    @Query("SELECT d FROM DetectionEntity d JOIN FETCH d.device ORDER BY d.time DESC, d.appName ASC NULLS LAST")
    List<DetectionEntity> findAllByOrderByTimeDesc();

    @Query("SELECT d FROM DetectionEntity d JOIN FETCH d.device WHERE d.device.id = :deviceId ORDER BY d.time DESC, d.appName ASC NULLS LAST")
    List<DetectionEntity> findAllByDeviceIdOrderByTimeDesc(@NonNull UUID deviceId);

    @Override
    @NonNull
    default List<DetectionEntity> findAll() {
        return findAllByOrderByTimeDesc();
    }

    @Override
    @NonNull
    default List<DetectionEntity> findByDeviceId(@NonNull UUID deviceId) {
        return findAllByDeviceIdOrderByTimeDesc(deviceId);
    }

    @Override
    default void createOrUpdateAll(@NonNull List<DetectionEntity> detectionEntities) {
        saveAll(detectionEntities);
    }
}
