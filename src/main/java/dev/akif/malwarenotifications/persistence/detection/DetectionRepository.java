package dev.akif.malwarenotifications.persistence.detection;

import dev.akif.malwarenotifications.detection.DetectionType;
import lombok.NonNull;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import java.util.List;
import java.util.Set;
import java.util.UUID;

/**
 * A repository to read/write {@link DetectionEntity}s.
 */
public interface DetectionRepository {
    /**
     * Finds a page of {@link DetectionEntity}s for given page and {@link DetectionType}s.
     *
     * @param pageable       Page of detections to return.
     * @param detectionTypes Types of detections to return.
     * @return Page of detections.
     */
    @NonNull Page<DetectionEntity> findAll(@NonNull Pageable pageable, @NonNull Set<DetectionType> detectionTypes);

    /**
     * Finds all {@link DetectionEntity}s for given device id.
     *
     * @param deviceId Device id.
     * @return List of detections for given device.
     */
    @NonNull List<DetectionEntity> findByDeviceId(@NonNull UUID deviceId);

    /**
     * Creates a new {@link DetectionEntity} or updates its data if it already exists for all given detections.
     *
     * @param detectionEntities Detections to create or update.
     */
    void createOrUpdateAll(@NonNull List<DetectionEntity> detectionEntities);
}
